name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.1)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Install test dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .
    
    - name: Run tests
      run: |
        pytest tests/ -v
    
    - name: Check version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="v${{ github.event.inputs.version }}"
        else
          VERSION="${{ github.ref_name }}"
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_ENV
        echo "Building version: ${VERSION}"
    
    - name: Build package
      run: |
        python -m build
        echo "Built packages:"
        ls -la dist/
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        files: |
          dist/*.whl
          dist/*.tar.gz
        generate_release_notes: true
        body: |
          ## EMBODIOS ${{ env.VERSION }}
          
          ### Installation
          ```bash
          pip install embodios
          ```
          
          ### Quick Start
          ```bash
          embodi init
          embodi build -f Modelfile -t my-ai-os
          embodi run my-ai-os
          ```
          
          See [documentation](https://github.com/embodiOS/core#readme) for more details.
    
    - name: Publish to Test PyPI
      if: github.event_name == 'workflow_dispatch'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        echo "Publishing to Test PyPI first..."
        twine upload --repository testpypi dist/* || echo "Test PyPI upload failed, continuing..."
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        echo "Publishing to PyPI..."
        twine upload dist/*
        echo "Package published successfully!"
        echo "Install with: pip install embodios==${{ env.VERSION }}"
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ env.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max